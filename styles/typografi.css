body {
  font: var(--text-body);
  color: var(--color-text);
}

p,
li {
  max-width: var(--site-content-width);
}

h1,
h2,
h3,
h4 {
  margin: 0;
}

h1 {
  margin-block-end: 1ex;
  font: var(--text-heading-1);
}

h2 {
  margin-block-start: 6ex;
  font: var(--text-heading-2);

  &:has(a) {
    margin-block-end: 1rem;
  }
}

h3 {
  margin-block: 4ex 0;
  font: var(--text-heading-3);
}

p {
  margin: 0;

  &:not(:last-child) {
    margin-block: 1ex 3ex;
  }
}

a {
  color: currentcolor;
  text-decoration-thickness: 0.2ex;
  text-decoration-style: solid;
  text-decoration-color: var(--color-border);
  text-underline-offset: 0.4ex;

  &:hover {
    text-decoration-thickness: 0.3ex;
  }

  &[hreflang="en"] {
    &::after {
      content: " (side pÃ¥ engelsk)";
    }
  }

  &:not(.name) {
    &:where([href*="index"], [href*="../"]) {
      &::before {
        content: "arrow_back" / "";
        font: var(--text-icon);
      }
    }
  }
}

mark {
  background-color: light-dark(var(--yellow), var(--blue));
  color: inherit;
  padding-inline: 0.1rem;
}

ul {
  padding-inline-start: 1rem;
}

li {
  margin-block-end: 2ex;
}

code {
  padding: 0.1rem;
  font: var(--text-code);
}

caption,
figcaption {
  grid-column: 1 / -1;
  padding-inline: var(--site-padding-inline);
  margin-block-start: 1rem;
  margin-inline: auto;
  font-size: smaller;
  text-align: start;
  caption-side: bottom;
}

blockquote {
  display: grid;
  grid-template-areas: "quote-start" "content" "quote-end";
  gap: 2rem;
  max-width: var(--site-content-width);
  padding: 4ch var(--site-padding-inline);
  margin-inline: var(--site-bleed);
  margin-block: 3ex;
  font-style: italic;
  background-color: var(--color-surface);
  border-block: 1px solid color-mix(in oklch, var(--color) 50%, currentcolor);

  *:first-child {
    margin-block-start: 0;
  }

  &::before,
  &::after {
    font: var(--text-icon);
    content: "format_quote";
    font-size: x-large;
  }

  &::before {
    grid-column: quote-start;
    margin-block-start: -1ch;
  }

  &::after {
    grid-column: quote-end;
    transform: scaleX(-1);
    align-self: end;
    margin-block-end: -1ch;
  }

  > * {
    grid-column: content;
  }

  @container (min-width: 65ch) {
    margin-inline: 0;
    grid-template-areas: "quote-start content quote-end";
  }
}
